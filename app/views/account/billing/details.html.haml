- content_for(:container) do
  .row
    .col-md-8
      .panel.panel-primary
        .panel-heading= "Billing Details [#{@account.name}]"
        .panel-body
          %table.table
            - if !@line_items[:new_plans].blank?
              %thead
                %tr
                  %th
                    New Plans (pending)
              %tbody.plans.new
                - @line_items[:new_plans].each do |plan_id, plan_info|
                  %tr
                    %td.plan.enabled{'data-plan' => plan_id, 'data-plan-cost' => plan_info[:cost]}
                      .row
                        .col-md-3
                          %b= plan_info[:name]
                        .col-md-8{:style => 'text-align: right'}= "#{number_to_currency(plan_info[:cost], :precision => 0, :locale => :en)}/mo"
                        .col-md-1
                          %center
                            = link_to yield(:delete_icon), '#', :class => 'plan-delete'

            - if !@line_items[:plans].empty?
              %thead
                %tr
                  %th
                    Subscribed Plans
              %tbody.plans
                - @line_items[:plans].each do |plan_id, plan_info|
                  %tr
                    %td.plan.enabled{'data-plan' => plan_id, 'data-plan-cost' => plan_info[:cost]}
                      .row
                        .col-md-3
                          %b= plan_info[:name]
                        .col-md-8{:style => 'text-align: right'}= "#{number_to_currency(plan_info[:cost], :precision => 0, :locale => :en)}/mo"
                        .col-md-1
                          %center
                            = link_to yield(:delete_icon), '#', :class => 'plan-delete'

            - if !@line_items[:pipelines].empty?
              %thead
                %tr
                  %th
                    Enabled Pipelines
              %tbody
                - @line_items[:pipelines].each do |route_id, route_info|
                  %tr
                    %td
                      .row
                        .col-md-3
                          %b= plan_info[:name]
                        .col-md-8{:style => 'text-align: right'}= "#{number_to_currency(plan_info[:cost], :precision => 0, :locale => :en)}/mo"
                        .col-md-1
                          %center
                            = link_to yield(:delete_icon), '#'
          .row
            .col-md-9
            .col-md-3
              .alert-success
                %center
                  Total:
                  - if @payment.get(:subscriptions, :data).first
                    %b#details-rate= "#{number_to_currency(@payment.get(:subscriptions, :data).first.get(:plan, :amount) / 100.to_f, :precision => 0, :locale => :en)}/mo"
                  - else
                    %b#details-rate= "#{number_to_currency(0, :precision => 0, :locale => :en)}/mo"
        .panel-footer.bg-info
          .div.pull-right
            = link_to yield(:ok_icon), '#', :id => 'billing-update', :class => 'window-rails', 'window-rails-callback' => 'billing_update', 'window-rails-confirm' => 'Update account subscriptions?', 'window-rails-title' => 'Billing Update'
          .clearfix
    .col-md-4
      .row
        %br
        .col-md-12
          .panel{:class => @past_due ? 'panel-danger' : 'panel-success'}
            .panel-heading
              Payment Information
              =# link_to yield(:delete_icon), '#', :class => 'pull-right'
              = link_to yield(:edit_icon), '#', :class => 'pull-right', :id => 'card-edit'
              .clearfix
            %table.table
              %tr
                %td
                  %b
                    Credit card:
                  %span.label.label-info= @card[:brand]
                %td{:style => 'text-align: right'}
                  %b= "****-****-****-#{@card[:last4]}"
                  %br
                  Expires:
                  %b= "#{@card[:exp_month]}/#{@card[:exp_year]}"
              %tr
                %td
                  %b
                    Current Rate:
                %td{:style => 'text-align: right'}
                  - if @payment.get(:subscriptions, :data).first
                    %b= "#{number_to_currency(@payment.get(:subscriptions, :data).first.get(:plan, :amount) / 100.to_f, :precision => 0, :locale => :en)}/mo"
                  - else
                    %b= "#{number_to_currency(0, :precision => 0, :locale => :en)}/mo"

= render(:partial => 'layouts/container')

= javascript_include_tag 'https://checkout.stripe.com/checkout.js'

:css
  .disabled{
    color: darkred;
    font-weight: bold;
    background-color: pink;
  }
  .new{
    color: darkgreen;
    font-weight: bold;
    background-color: palegreen;
  }

:javascript

  function billing_update(){
    plans = $('td.plan.enabled').map(function(){
      return $(this).attr('data-plan');
    }).toArray();
    $.post(
      '#{account_billing_modify_path}', {
        plan_ids: plans
      }
    );
  }

  function calculate_billing(){
    total = 0;
    $('td.enabled').each(function(){
      total = total + Number($(this).attr('data-plan-cost'));
    });
    $('#details-rate').html('$' + total.toFixed(2) + '/mo');
  }


  function billing_setup(){
    var handler = StripeCheckout.configure({
      key: '#{@publish_key}',
      locale: 'auto',
      token: function(token){
        $.post(
          '#{account_billing_edit_path}', {
            token: token.id
          }
        );
      }
    });

    $('#card-edit').on('click', function(elm){
      handler.open({
        name: 'Update Card',
        image: '/checkout-image.png',
        'panel-label': 'Update',
        'allow-remember-me': false,
        email: '#{@payment.email}'
      });
      elm.preventDefault();
    });

    $(window).on('popstate', function(){ handler.close(); });

    $('.plan-delete').click(function(){
      table_row = $(this).parents('td.plan');
      if(table_row.hasClass('enabled')){
        table_row.removeClass('enabled');
        table_row.addClass('disabled');
      } else {
        table_row.removeClass('disabled');
        table_row.addClass('enabled');
      }
      calculate_billing();
    });

    calculate_billing();
  }

  $(document).ready(billing_setup);
  $(document).on('page:load', billing_setup);
